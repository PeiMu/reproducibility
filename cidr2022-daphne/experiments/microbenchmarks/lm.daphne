// Linear regression model training on random data (double precision).

// Data generation.
XY = false; // just so that it exists
if($useInputFile)
    XY = readMatrix($inputFile);
else
    XY = rand($numRows, $numCols, 0.0, 1.0, 1, -1);

tp0 = now();

// Extraction of X and y.
X = XY[, seq(0, as.si64($numCols) - 2, 1)];
y = XY[, seq(as.si64($numCols) - 1, as.si64($numCols) - 1, 1)];

// Normalization, standardization.
Xmeans = mean(X, 1);
Xstddev = stddev(X, 1);
// Could be expressed as follows to simplify vectorization:
//Xmeans = sum(X, 1) / as.f64($numRows);
//Xstddev = sqrt(sum((X - Xmeans) ^ 2.0, 1) / as.f64($numRows));

X = (X - Xmeans) / Xstddev;

X = cbind(X, fill(1.0, nrow(X), 1));

//A = t(X) @ X;
// Can be rewritten as follows to simplify vectorization (and for general speed-up):
A = syrk(X);

lambda = fill(0.001, ncol(X), 1);
A = A + diagMatrix(lambda);

//b = t(X) @ y;
// Can be rewritten as follows to simplify vectorization:
b = t(t(y) @ X);
// or
//b = t(sum((X * y), 1));

beta = solve(A, b);

tp1 = now();
print(tp1 - tp0, 1, 2);

// ****************************************************************************
// Result output
// ****************************************************************************

print(beta);
