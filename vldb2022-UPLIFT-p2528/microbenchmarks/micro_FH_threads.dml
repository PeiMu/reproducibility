# Run with apply block = 8.
# Override the optimizer

data = read("data.csv", data_type="frame", format="csv", header=FALSE);
allCols = "1";
for (i in 2:ncol(data))
  allCols = allCols+","+i;

hash = allCols;
K = 10000; #10% of #distinct values (i.e. results 10% #cols of OHE)
jspec2 = "{ ids:true, hash:["+hash+"], K:"+K+"}"; #FH
#jspec2 = "{ ids:true, hash:["+hash+"], K:"+10000+", dummycode:["+dummy+"]}"; #FH+DC

lim = 10;
R = matrix(0, rows=lim, cols=1);
for (i in 1:lim) {
  print("INFO: starting transformencode");
  t1 = time();
  [X, M] = transformencode(target=data, spec=jspec2);
  t2 = time();
  print("Elapsed time for transformations using SystemDS = "+floor((t2-t1)/1000000)+" millsec");
  R[i,1] = floor((t2-t1)/1000000);  
}
print("("+nrow(X)+", "+ncol(X)+")");
R = order(target=R, by=1);
res = R[1:5,];

nthread = $1;
if (nthread == 1)
  write(res, "res_FH_1thread.dat", format="csv", sep="\t");
if (nthread == 2)
  write(res, "res_FH_2thread.dat", format="csv", sep="\t");
if (nthread == 4)
  write(res, "res_FH_4thread.dat", format="csv", sep="\t");
if (nthread == 8)
  write(res, "res_FH_8thread.dat", format="csv", sep="\t");
if (nthread == 16)
  write(res, "res_FH_16thread.dat", format="csv", sep="\t");
if (nthread == 32)
  write(res, "res_FH_32thread.dat", format="csv", sep="\t");

