Forig = read("./data/Salaries.csv", data_type="frame", format="csv", header=TRUE);

F = Forig[,1:ncol(Forig)-1];
y = as.matrix(Forig[,ncol(Forig)]);

# data preparation
jspec= "{ ids:true, recode:[1,2,3,6], bin:[{id:4, method:equi-width, numbins:10},{id:5, method:equi-width, numbins:10}]}"
[X,M] = transformencode(target=F, spec=jspec);
X = X[,2:ncol(X)]

print(ncol(F) +" -> "+ ncol(X))

# one hot encoding
m = nrow(X)
n = ncol(X)
fdom = colMaxs(X);
foffb = t(cumsum(t(fdom))) - fdom;
foffe = t(cumsum(t(fdom)))
rix = matrix(seq(1,m)%*%matrix(1,1,n), m*n, 1)
cix = matrix(X + foffb, m*n, 1);
X2 = table(rix, cix); #one-hot encoded

# learn model
B = lm(X=X2, y=y, icpt=1, reg=0.0001, verbose=FALSE);
yhat = lmPredict(X=X2, B=B, ytest=y, icpt=1, verbose=TRUE);
e = (y-yhat)^2;

write(X, "data/Salaries_X.csv", format="csv")
write(e, "data/Salaries_o_e.csv", format="csv")
